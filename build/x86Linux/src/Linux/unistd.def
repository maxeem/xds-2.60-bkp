(* Copyright (c) xTech 1997.  All Rights Reserved *)

(* $RCSfile: unistd.def,v $ $Revision: 7 $ $Date: 8.10.07 19:07 $ *)

<*+ CSTDLIB  *>
<*+ NOHEADER*>
<*+ M2EXTENSIONS *>

DEFINITION MODULE [2] unistd;

FROM SYSTEM IMPORT ADDRESS, BYTE, INT32, BOOL32, int;
FROM xmRTS IMPORT X2C_pCHAR;
FROM types IMPORT ssize_t, pid_t, gid_t, uid_t, off_t, size_t, off64_t;


<* IF __GEN_C__ THEN *>
VAR
  F_OK          -: INTEGER;
  R_OK          -: INTEGER;
  SEEK_CUR      -: INTEGER;
  SEEK_END      -: INTEGER;
  SEEK_SET      -: INTEGER;
  STDERR_FILENO -: INTEGER;
  STDIN_FILENO  -: INTEGER;
  STDOUT_FILENO -: INTEGER;
  W_OK          -: INTEGER;
  X_OK          -: INTEGER;

  _PC_CHOWN_RESTRICTED    -: INTEGER;
  _PC_MAX_CANNON          -: INTEGER;
  _PC_MAX_INPUT           -: INTEGER;
  _PC_NAME_MAX            -: INTEGER;
  _PC_NO_TRUNC            -: INTEGER;
  _PC_PATH_MAX            -: INTEGER;
  _PC_PIPE_BUF            -: INTEGER;
  _PC_VDISABLE            -: INTEGER;
  _POSIX_CHOWN_RESTRICTED -: INTEGER;
  _POSIX_JOB_CONTROL      -: INTEGER;
  _POSIX_NO_TRUNC         -: INTEGER;
  _POSIX_SAVED_IDS        -: INTEGER;
  _POSIX_VDISABLE         -: INTEGER;
  _POSIX_VERSION          -: INTEGER;

  _SC_ARG_MAX     -: INTEGER;
  _SC_CHILD_MAX   -: INTEGER;
  _SC_CLK_TCK     -: INTEGER;
  _SC_JOB_CONTROL -: INTEGER;
  _SC_NGROUPS_MAX -: INTEGER;
  _SC_OPEN_MAX    -: INTEGER;
  _SC_SAVED_IDS   -: INTEGER;
  _SC_STREAM_MAX  -: INTEGER;
  _SC_TZNAME_MAX  -: INTEGER;
  _SC_VERSION     -: INTEGER;

  _SC_PAGESIZE          -: INTEGER;
  _SC_NPROCESSORS_CONF  -: INTEGER;
  _SC_NPROCESSORS_ONLN  -: INTEGER;

<* ELSE *>
CONST   (* Constants from LiNUX *)

  (* POSIX Standard approved as IEEE Std 1003.1b as of September 15, 1993. *)
  _POSIX_VERSION = 199309;

  _POSIX_CHOWN_RESTRICTED = 1;  (* only root can do a chown (I think..) *)
  _POSIX_NO_TRUNC = 1;          (* no pathname truncation (but see in kernel)*)
  _POSIX_VDISABLE = 0C;         (* character to disable things like ^C *)
  _POSIX_JOB_CONTROL = 1;
  _POSIX_SAVED_IDS = 1;         (* Implemented, for whatever good it is *)

  (* Standard file descriptors. *)
  STDIN_FILENO = 0;     (* Standard input. *)
  STDOUT_FILENO = 1;    (* Standard output. *)
  STDERR_FILENO = 2;    (* Standard error output. *)

  (* Values for the second argument to access.
   These may be OR'd together.  *)
  R_OK = 4;     (* Test for read permission.  *)
  W_OK = 2;     (* Test for write permission. *)
  X_OK = 1;     (* Test for execute permission. *)
  F_OK = 0;     (* Test for existence. *)

  (* Values for the WHENCE argument to lseek. *)
  SEEK_SET = 0; (* Seek from beginning of file. *)
  SEEK_CUR = 1; (* Seek from current position. *)
  SEEK_END = 2; (* Seek from end of file. *)

  (* Values for the NAME argument to `pathconf' and `fpathconf'. *)
  _PC_MAX_CANON         = 1;
  _PC_MAX_INPUT         = 2;
  _PC_NAME_MAX          = 3;
  _PC_PATH_MAX          = 4;
  _PC_PIPE_BUF          = 5;
  _PC_CHOWN_RESTRICTED  = 6;
  _PC_NO_TRUNC          = 7;
  _PC_VDISABLE          = 8;

  (* Values for the argument to `sysconf'. *)
  _SC_ARG_MAX = 0;
  _SC_CHILD_MAX = 1;
  _SC_CLK_TCK = 2;
  _SC_NGROUPS_MAX = 3;
  _SC_OPEN_MAX = 4;
  _SC_STREAM_MAX = 5;
  _SC_TZNAME_MAX = 6;
  _SC_JOB_CONTROL = 7;
  _SC_SAVED_IDS = 8;
  _SC_REALTIME_SIGNALS = 9;
  _SC_PRIORITY_SCHEDULING = 10;
  _SC_TIMERS = 11;
  _SC_ASYNCHRONOUS_IO = 12;
  _SC_PRIORITIZED_IO = 13;
  _SC_SYNCHRONIZED_IO = 14;
  _SC_FSYNC = 15;
  _SC_MAPPED_FILES = 16;
  _SC_MEMLOCK = 17;
  _SC_MEMLOCK_RANGE = 18;
  _SC_MEMORY_PROTECTION = 19;
  _SC_MESSAGE_PASSING = 20;
  _SC_SEMAPHORES = 21;
  _SC_SHARED_MEMORY_OBJECTS = 22;
  _SC_AIO_LISTIO_MAX = 23;
  _SC_AIO_MAX = 24;
  _SC_AIO_PRIO_DELTA_MAX = 25;
  _SC_DELAYTIMER_MAX = 26;
  _SC_MQ_OPEN_MAX = 27;
  _SC_MQ_PRIO_MAX = 28;
  _SC_VERSION = 29;
  _SC_PAGESIZE = 30;
  _SC_RTSIG_MAX = 31;
  _SC_SEM_NSEMS_MAX = 32;
  _SC_SEM_VALUE_MAX = 33;
  _SC_SIGQUEUE_MAX = 34;
  _SC_TIMER_MAX = 35;
  
  (* Values for the argument to `sysconf' corresponding
     to _POSIX2_* symbols.  *)
  _SC_BC_BASE_MAX = 36;
  _SC_BC_DIM_MAX = 37;
  _SC_BC_SCALE_MAX = 38;
  _SC_BC_STRING_MAX = 39;
  _SC_COLL_WEIGHTS_MAX = 40;
  _SC_EQUIV_CLASS_MAX = 41;
  _SC_EXPR_NEST_MAX = 42;
  _SC_LINE_MAX = 43;
  _SC_RE_DUP_MAX = 44;
  _SC_CHARCLASS_NAME_MAX = 45;
  _SC_2_VERSION = 46;
  _SC_2_C_BIND = 47;
  _SC_2_C_DEV = 48;
  _SC_2_FORT_DEV = 49;
  _SC_2_FORT_RUN = 50;
  _SC_2_SW_DEV = 51;
  _SC_2_LOCALEDEF = 52;
  _SC_PII = 53;
  _SC_PII_XTI = 54;
  _SC_PII_SOCKET = 55;
  _SC_PII_INTERNET = 56;
  _SC_PII_OSI = 57;
  _SC_POLL = 58;
  _SC_SELECT = 59;
  _SC_UIO_MAXIOV = 60;
  _SC_IOV_MAX = 60;
  _SC_PII_INTERNET_STREAM = 61;
  _SC_PII_INTERNET_DGRAM = 62;
  _SC_PII_OSI_COTS = 63;
  _SC_PII_OSI_CLTS = 64;
  _SC_PII_OSI_M = 65;
  _SC_T_IOV_MAX = 66;

  (* Values according to POSIX 1003.1c (POSIX threads).  *)
  _SC_THREADS = 67;
  _SC_THREAD_SAFE_FUNCTIONS = 68;
  _SC_GETGR_R_SIZE_MAX = 69;
  _SC_GETPW_R_SIZE_MAX = 70;
  _SC_LOGIN_NAME_MAX = 71;
  _SC_TTY_NAME_MAX = 72;
  _SC_THREAD_DESTRUCTOR_ITERATIONS = 73;
  _SC_THREAD_KEYS_MAX = 74;
  _SC_THREAD_STACK_MIN = 75;
  _SC_THREAD_THREADS_MAX = 76;
  _SC_THREAD_ATTR_STACKADDR = 77;
  _SC_THREAD_ATTR_STACKSIZE = 78;
  _SC_THREAD_PRIORITY_SCHEDULING = 79;
  _SC_THREAD_PRIO_INHERIT = 80;
  _SC_THREAD_PRIO_PROTECT = 81;
  _SC_THREAD_PROCESS_SHARED = 82;
  _SC_NPROCESSORS_CONF = 83;
  _SC_NPROCESSORS_ONLN = 84;
  _SC_PHYS_PAGES = 85;
  _SC_AVPHYS_PAGES = 86;
  _SC_ATEXIT_MAX = 87;
  _SC_PASS_MAX = 88;
  _SC_XOPEN_VERSION = 89;
  _SC_XOPEN_XCU_VERSION = 90;
  _SC_XOPEN_UNIX = 91;
  _SC_XOPEN_CRYPT = 92;
  _SC_XOPEN_ENH_I18N = 93;
  _SC_XOPEN_SHM = 94;
  _SC_2_CHAR_TERM = 95;
  _SC_2_C_VERSION = 96;
  _SC_2_UPE = 97;
  _SC_XOPEN_XPG2 = 98;
  _SC_XOPEN_XPG3 = 99;
  _SC_XOPEN_XPG4 = 100;
  _SC_CHAR_BIT = 101;
  _SC_CHAR_MAX = 102;
  _SC_CHAR_MIN = 103;
  _SC_INT_MAX = 104;
  _SC_INT_MIN = 105;
  _SC_LONG_BIT = 106;
  _SC_WORD_BIT = 107;
  _SC_MB_LEN_MAX = 108;
  _SC_NZERO = 109;
  _SC_SSIZE_MAX = 110;
  _SC_SCHAR_MAX = 111;
  _SC_SCHAR_MIN = 112;
  _SC_SHRT_MAX = 113;
  _SC_SHRT_MIN = 114;
  _SC_UCHAR_MAX = 115;
  _SC_UINT_MAX = 116;
  _SC_ULONG_MAX = 117;
  _SC_USHRT_MAX = 118;
  _SC_NL_ARGMAX = 119;
  _SC_NL_LANGMAX = 120;
  _SC_NL_MSGMAX = 121;
  _SC_NL_NMAX = 122;
  _SC_NL_SETMAX = 123;
  _SC_NL_TEXTMAX = 124;
  _SC_XBS5_ILP32_OFF32 = 125;
  _SC_XBS5_ILP32_OFFBIG = 126;
  _SC_XBS5_LP64_OFF64 = 127;
  _SC_XBS5_LPBIG_OFFBIG = 128;
  _SC_XOPEN_LEGACY = 129;
  _SC_XOPEN_REALTIME = 130;
  _SC_XOPEN_REALTIME_THREADS = 131;
  _SC_ADVISORY_INFO = 132;
  _SC_BARRIERS = 133;
  _SC_BASE = 134;
  _SC_C_LANG_SUPPORT = 135;
  _SC_C_LANG_SUPPORT_R = 136;
  _SC_CLOCK_SELECTION = 137;
  _SC_CPUTIME = 138;
  _SC_THREAD_CPUTIME = 139;
  _SC_DEVICE_IO = 140;
  _SC_DEVICE_SPECIFIC = 141;
  _SC_DEVICE_SPECIFIC_R = 142;
  _SC_FD_MGMT = 143;
  _SC_FIFO = 144;
  _SC_PIPE = 145;
  _SC_FILE_ATTRIBUTES = 146;
  _SC_FILE_LOCKING = 147;
  _SC_FILE_SYSTEM = 148;
  _SC_MONOTONIC_CLOCK = 149;
  _SC_MULTI_PROCESS = 150;
  _SC_SINGLE_PROCESS = 151;
  _SC_NETWORKING = 152;
  _SC_READER_WRITER_LOCKS = 153;
  _SC_SPIN_LOCKS = 154;
  _SC_REGEXP = 155;
  _SC_REGEX_VERSION = 156;
  _SC_SHELL = 157;
  _SC_SIGNALS = 158;
  _SC_SPAWN = 159;
  _SC_SPORADIC_SERVER = 160;
  _SC_THREAD_SPORADIC_SERVER = 161;
  _SC_SYSTEM_DATABASE = 162;
  _SC_SYSTEM_DATABASE_R = 163;
  _SC_TIMEOUTS = 164;
  _SC_TYPED_MEMORY_OBJECTS = 165;
  _SC_USER_GROUPS = 166;
  _SC_USER_GROUPS_R = 167;
  _SC_2_PBS = 168;
  _SC_2_PBS_ACCOUNTING = 169;
  _SC_2_PBS_LOCATE = 170;
  _SC_2_PBS_MESSAGE = 171;
  _SC_2_PBS_TRACK = 172;
  _SC_SYMLOOP_MAX = 173;
  _SC_STREAMS = 174;
  _SC_2_PBS_CHECKPOINT = 175;
  _SC_V6_ILP32_OFF32 = 176;
  _SC_V6_ILP32_OFFBIG = 177;
  _SC_V6_LP64_OFF64 = 178;
  _SC_V6_LPBIG_OFFBIG = 179;
  _SC_HOST_NAME_MAX = 180;
  _SC_TRACE = 181;
  _SC_TRACE_EVENT_FILTER = 182;
  _SC_TRACE_INHERIT = 183;
  _SC_TRACE_LOG = 184;
<* END *>

<* IF __GEN_C__ THEN *><*- GENTYPEDEF *><* END *>
TYPE
  argv_t = ARRAY [0..800000H] OF X2C_pCHAR;
  pipe_t = ARRAY [0..1] OF INTEGER;

  pgid_t = POINTER TO gid_t;

VAR
  environ -: POINTER TO X2C_pCHAR;


PROCEDURE _exit (status: INTEGER);
PROCEDURE access (path: ARRAY OF CHAR; amode: INTEGER): INTEGER;
PROCEDURE alarm (seconds: CARDINAL): CARDINAL;
PROCEDURE chdir (path: ARRAY OF CHAR): INTEGER;
PROCEDURE close (fildes: INTEGER): INTEGER;
PROCEDURE dup (fildes: INTEGER): INTEGER;
PROCEDURE dup2 (fildes, fildes2: INTEGER): INTEGER;
PROCEDURE execl (path, arg: ARRAY OF CHAR; SEQ args: BYTE): INTEGER;
PROCEDURE execle (path, arg: ARRAY OF CHAR; SEQ args: BYTE): INTEGER;
PROCEDURE execlp (path, arg: ARRAY OF CHAR; SEQ args: BYTE): INTEGER;
PROCEDURE execv (path : ARRAY OF CHAR; argv: ARRAY OF X2C_pCHAR; SEQ args: BYTE): INTEGER;
PROCEDURE execve (path : ARRAY OF CHAR; argv, envp: ARRAY OF X2C_pCHAR): INTEGER;
PROCEDURE execvp (path : ARRAY OF CHAR; argv: ARRAY OF X2C_pCHAR): INTEGER;
PROCEDURE fork (): pid_t;
PROCEDURE fpathconf (fildes, name: INTEGER): INT32;
PROCEDURE fsync(fd: INTEGER): INTEGER;
PROCEDURE fdatasync(fd: INTEGER): INTEGER;
PROCEDURE ftruncate (filedes : INTEGER; length : off_t) : INTEGER;
PROCEDURE getcwd (VAR buf: ARRAY OF CHAR; size: size_t): ADDRESS;
PROCEDURE getegid (): gid_t;
PROCEDURE geteuid (): uid_t;
PROCEDURE getgid (): gid_t;
PROCEDURE getuid (): uid_t;
PROCEDURE getgroups (gidsetsize: INTEGER; grouplist: pgid_t): INTEGER;
PROCEDURE getlogin (): X2C_pCHAR;
PROCEDURE getpid (): pid_t;
PROCEDURE getppid (): pid_t;
PROCEDURE isatty (fildes: INTEGER): BOOL32;
PROCEDURE link (existing, new: ARRAY OF CHAR): INTEGER;
PROCEDURE lseek (fildes: INTEGER; offset: off_t; whence: INTEGER): off_t;
PROCEDURE pathconf (path: ARRAY OF CHAR; name: INTEGER): INT32;
PROCEDURE pause (): INTEGER;
PROCEDURE pipe (VAR fildes: pipe_t): INTEGER;
PROCEDURE pread (fd :INTEGER; buf :ADDRESS; n :size_t; offset :off_t): ssize_t;
PROCEDURE pread64 (fd :INTEGER; buf :ADDRESS; n :size_t; offset :off64_t): ssize_t;
PROCEDURE pwrite (fd :INTEGER; buf :ADDRESS; n :size_t; offset :off_t): ssize_t;
PROCEDURE pwrite64 (fd :INTEGER; buf :ADDRESS; n :size_t; offset :off64_t): ssize_t;
PROCEDURE read (fildes: INTEGER; buf: ADDRESS; nbyte: CARDINAL): INTEGER;
PROCEDURE readlink (path: ARRAY OF CHAR; VAR buf: ARRAY OF CHAR; bufsiz: size_t): INTEGER;
PROCEDURE rmdir (path: ARRAY OF CHAR): INTEGER;
PROCEDURE setgid (gid: gid_t): INTEGER;
PROCEDURE setpgid (pid, pgid: pid_t): INTEGER;
PROCEDURE setsid (): pid_t;
PROCEDURE setuid (uid: uid_t): INTEGER;
PROCEDURE sleep (seconds: CARDINAL): CARDINAL;
PROCEDURE sysconf (name: INTEGER): INT32;
PROCEDURE symlink (oldname, newname: ARRAY OF CHAR): INT32;
PROCEDURE tcgetpgrp (fildes: INTEGER): pid_t;
PROCEDURE tcsetpgrp (fildes: INTEGER; pgrpid: pid_t): INTEGER;
PROCEDURE truncate (fname: ARRAY OF CHAR; length: off_t): INTEGER;
PROCEDURE ttyname (fildes: INTEGER): X2C_pCHAR;
PROCEDURE unlink (path: ARRAY OF CHAR): INTEGER;
PROCEDURE usleep(microseconds: CARDINAL);
PROCEDURE write (fildes: INTEGER; buf: ADDRESS; nbyte: CARDINAL): INTEGER;
PROCEDURE cuserid (VAR s: ARRAY OF CHAR): X2C_pCHAR;

(* 64-bit Linux extensions *)
PROCEDURE lseek64 (fildes: INTEGER; offset: off64_t; whence: INTEGER): off64_t;
PROCEDURE truncate64 (fname: ARRAY OF CHAR; length: off64_t): INTEGER;
PROCEDURE ftruncate64 (filedes: INTEGER; length: off64_t): INTEGER;


END unistd.
