% Names for C realities generated by XDS-C convertor (version 5.03/TRANSEC)

!if genctypes then

  1 "unsigned char"     SHORTCARD
  2 "unsigned short"    CARDINAL
  3 "unsigned long"     LONGCARD
  4 "signed char"       SHORTINT
  5 "short"             INTEGER
  6 "long"              LONGINT
  7 "float"             REAL
  8 "double"            LONGREAL
  9 "long double"       LONGLONGREAL

 !if gencpp then
 10 "char"              BOOLEAN
 !else
 10 "char"               BOOLEAN
 !end

 !if genunicode then
 11 "TCHAR"             CHAR
 !else
 11 "unsigned char"     CHAR
 !end

 12 "char *"            AA (typeless pointer)
 13 "char"              LOC
 14 "short"             PROTECTION

 15 "unsigned char"     SET8
 16 "unsigned short"    SET16
 17 "unsigned long"     SET32

!else

  1 "X2C_CARD8"         SHORTCARD
  2 "X2C_CARD16"        CARDINAL
  3 "X2C_CARD32"        LONGCARD
  4 "X2C_INT8"          SHORTINT
  5 "X2C_INT16"         INTEGER
  6 "X2C_INT32"         LONGINT
  7 "X2C_REAL"          REAL
  8 "X2C_LONGREAL"      LONGREAL
  9 "X2C_LONGDOUBLE"    LONGLONGREAL
 10 "X2C_BOOLEAN"        BOOLEAN
 11 "X2C_CHAR"          CHAR
 12 "X2C_ADDRESS"       AA (typeless pointer)
 13 "X2C_LOC"           LOC
 14 "X2C_PROTECTION"    PROTECTION

 15 "X2C_CARD8"         SET8
 16 "X2C_CARD16"        SET16
 17 "X2C_CARD32"        SET32
!end

 18 "X2C_COMPLEX"       COMPLEX
 19 "X2C_LONGCOMPLEX"	LONG COMPLEX
 20 "void"              void
 21 "X2C_SEQ"		SEQ type
 22 "X2C_LSET"		long set

 23 "X2C_CAST"		type cast
 24 "X2C_CHKNIL"        address check NIL
 25 "X2C_CHKPROC"	proc check NIL
 26 "X2C_PROTECT"	protect
 27 "X2C_XON"		xon
 28 "X2C_XOFF"		xoff
 29 "X2C_XTRY"		xtry
 30 "X2C_XRETRY"	xretry
 31 "X2C_FINALLY"	FINALLY
 32 "X2C_XREMOVE"	xremove
 33 "Adr"		dynarray address
 34 "Len"		dynarray length
 35 "Size"		dynarray size
 36 "memcmp"		memcmp
 37 "memcpy"		memcpy
 38 "X2C_STRCMP"        strcmp
 39 "X2C_QUO"		QUO
 40 "X2C_DIV"		DIV
 41 "X2C_REM"		REM
 42 "X2C_MOD"		MOD
 43 "X2C_CAP"		CAP
 44 "X2C_IN"		IN (short set)
 45 "X2C_INL"		IN (long set)
 46 "X2C_PCOPY"		alloc param
 47 "X2C_PFREE"		free param
 48 "X2C_BEGIN"		RTS body
 49 "X2C_LENGTH"        LENGTH
 50 "X2C_SET"		set range
 51 "X2C_ASSERT"        ASSERT
 52 "X2C_TRAP"		trap
 53 "X2C_CASE_TRAP"	case trap
 54 "X2C_RETURN_TRAP"	return trap
 55 "X2C_GUARD_TRAP"	guard trap
 56 "X2C_ROT"		ROT (short set)
 57 "X2C_ROTL"		ROT (long set)
 58 "X2C_TRUNCI"	TRUNC integer
 59 "X2C_TRUNCC"	TRUNC cardinal
 60 "X2C_PROC"		proc cast
 61 "CPLX_CMP"		COMPLEX ==
 62 "CPLX_ADD"		COMPLEX +
 63 "CPLX_SUB"		COMPLEX -
 64 "CPLX_MUL"		COMPLEX *
 65 "CPLX_DIV"		COMPLEX /
 66 "CPLX_LCMP"		LONG COMPLEX ==
 67 "CPLX_LADD"		LONG COMPLEX +
 68 "CPLX_LSUB"		LONG COMPLEX -
 69 "CPLX_LMUL"		LONG COMPLEX *
 70 "CPLX_LDIV"		LONG COMPLEX /
 71 "X2C_CHKINX"	index check
 72 "X2C_CHKINXL"	long index check
 73 "X2C_CHK"		range check
 74 "X2C_CHKL"		long range check
 75 "X2C_CHKU"		unsigned range check
 76 "X2C_CHKUL"		unsigned long range check
 77 "X2C_HALT"		HALT
 78 "X2C_ABORT"		abort
 79 "X2C_MOVE"		move
 80 "X2C_COPY"		COPY
 81 "X2C_ALLOCATE"	ALLOCATE
 82 "X2C_DEALLOCATE"	DEALLOCATE
 83 "X2C_DYNALLOCATE"	ALLOCATE dynamic
 84 "X2C_DYNDEALLOCATE"	DEALLOCATE dynamic
 85 "X2C_NEW_OPEN"	NEW open
 86 "X2C_NEW"		NEW

!if genctypes then
 87 "size_t"            index
!else
 87 "X2C_INDEX"         index
!end

 88 "X2C_DISPOSE"       DISPOSE
 89 "CPLX_NEG"		COMPLEX unary -
 90 "CPLX_LNEG"		LONG COMPLEX unary -

!if genunicode then
 91 "_tcsstrncpy"       strncpy
!else
 91 "strncpy"           strncpy
!end

 92 "X2C_LSH"           LSH
 93 "X2C_LSHL"		LSH long
 94 "X2C_ASH"		ASH
 95 "memset"		fill
 96 "X2C_DYNCALLOCATE"	C ALLOCATE dynamic
 97 "X2C_DYNCDEALLOCATE"C DEALLOCATE dynamic
 98 "X2C_INCL"		INCL
 99 "X2C_EXCL"		EXCL
100 "X2C_OFS"		offset
101 "X2C_OFS_REC"       record offset
102 "X2C_OFS_ARR"       array offset

103 "X2C_DLL_TAG"	DLL_TAG macro flag
104 "X2C_GEN_DLL"	GEN_DLL macro flag
105 "X2C_DLL_EXPORT"	DLL_EXPORT macro flag
106 "X2C_DLL_IMPORT"	DLL_IMPORT macro flag
107 "X2C_PROCLASS"	proc class modifier
108 "X2C_PASCAL"	PASCAL modifier
109 "X2C_STDCALL"	STDCALL modifier
110 "X2C_SYSCALL"	SYSCALL modifier
111 "X2C_GET_TD"	get type descriptor

112 "X2C_INCC"		INC char
113 "X2C_INCS"		INC shortint
114 "X2C_INCI"		INC integer
115 "X2C_INC"		INC longint
116 "X2C_INCUS"		INC shortcard
117 "X2C_INCUI"		INC cardinal
118 "X2C_INCU"		INC longcard
119 "X2C_DECC"		DEC char
120 "X2C_DECS"		DEC shortint
121 "X2C_DECI"		DEC integer
122 "X2C_DEC"		DEC longint
123 "X2C_DECUS"		DEC shortcard
124 "X2C_DECUI"		DEC cardinal
125 "X2C_DECU"		DEC longcard
126 "X2C_ABS_INT8"	ABS shortint with check
127 "X2C_ABS_INT16"     ABS integer with check
128 "X2C_ABS_INT32"     ABS longint with check
129 "X2C_min_real"	MIN real
130 "X2C_min_longreal"	MIN longreal
131 "X2C_min_longdouble"MIN longlongreal
132 "X2C_max_real"	MAX real
133 "X2C_max_longreal"	MAX longreal
134 "X2C_max_longdouble"MAX longlongreal
135 "X2C_AND"		AND long
136 "X2C_OR"		OR  long
137 "X2C_XOR"		XOR long
138 "X2C_BIC"		BIC long
139 "X2C_EXPCI"		EXP cplx^longint 
140 "X2C_EXPCR"		EXP cplx^longreal
141 "X2C_EXPLI"		EXP lcplx^longint
142 "X2C_EXPLR"		EXP lcplx^longreal
143 "X2C_EXPRI"		EXP longreal^longint
144 "X2C_EXPRR"		EXP longreal^longreal
145 "X2C_COMPLEMENT"	complement
146 "X2C_ENTIER"	entier
147 "X2C_CHKSL"		CHKSL
148 "X2C_LONGSET"	long set constructor
149 "X2C_GUARDP"        guard P
150 "X2C_GUARDPE"       guard PE
151 "X2C_GUARDV"        guard V
152 "X2C_GUARDVE"       guard VE
153 "X2C_SET_HINFO"     set history info
154 "X2C_CALL"		call
155 "X2C_SET_EQU"	set ==
156 "X2C_SET_LEQ"	set <=
157 "X2C_PROT"		prot
158 "X2C_XHandler_STR"	XHandler struct
159 "X2C_OFS_END"	OFS end
160 "X2C_TD_STR"	type descriptor struct
161 "X2C_Profile_STR"	profile struct
162 "X2C_PRF"		profile
163 "X2C_PROC_PRF"	proc profile
164 "X2C_PROC_INP"	proc input
165 "X2C_PROC_OUT"	proc output
166 "X2C_MD_STR"	module descriptor struct
167 "X2C_STACK_LIMIT"	stack limit
168 "X2C_MODULE"	module
169 "X2C_EXIT"		exit
170 "X2C_min_longint"	MIN longint
171 "X2C_max_longint"	MAX longint
172 "X2C_max_longcard"	MAX longcard
173 "X2C_TD"		type descriptor
174 "CPLX_L"            conv complex to long complex
175 "X2C_INRANGE"       CASE range check
176 "X2C_FIELD_OFS"     Field offset
177 "X2C_DIVR"          REAL /
178 "X2C_DIVL"          LONGREAL /