/* Generated by XDS Oberon-2 to ANSI C v4.20 translator */

#ifndef adt_H_
#define adt_H_
#ifndef X2C_H_
#include "X2C.h"
#endif
#ifndef LongStrs_H_
#include "LongStrs.h"
#endif

#define adt_equal 0

#define adt_more 1

#define adt_less 2

#define adt_noncompared 3

extern X2C_INT32 adt_CurrList;

extern X2C_INT32 adt_MaxList;

extern X2C_INT32 adt_CurrTree;

extern X2C_INT32 adt_MaxTree;

struct adt_ElementDesc;
extern struct X2C_TD_STR adt_ElementDesc_desc;

typedef struct adt_ElementDesc * adt_Element;


struct adt_ElementDesc {
   X2C_INT32 _dummy_;
};

struct adt_NamedElementDesc;
extern struct X2C_TD_STR adt_NamedElementDesc_desc;

typedef struct adt_NamedElementDesc * adt_NamedElement;


struct adt_NamedElementDesc {
   X2C_INT32 _dummy_;
   LongStrs_String name;
};

struct adt_StateDesc;
extern struct X2C_TD_STR adt_StateDesc_desc;

typedef struct adt_StateDesc * adt_State;


struct adt_StateDesc {
   X2C_INT32 _dummy_;
   adt_Element state;
   X2C_INT32 id;
};

struct adt_StackDesc;
extern struct X2C_TD_STR adt_StackDesc_desc;

typedef struct adt_StackDesc * adt_Stack;


struct adt_StackDesc {
   X2C_INT32 _dummy_;
   adt_Stack down;
   adt_Element e;
};

struct adt_TreeDesc;
extern struct X2C_TD_STR adt_TreeDesc_desc;

typedef struct adt_TreeDesc * adt_Tree;


struct adt_TreeDesc {
   X2C_INT32 _dummy_;
   adt_Element e;
   adt_Tree left;
   adt_Tree right;
   adt_Tree up;
   adt_Stack state;
   X2C_INT32 id;
   X2C_INT32 bal;
};

struct adt_ListDesc;
extern struct X2C_TD_STR adt_ListDesc_desc;

typedef struct adt_ListDesc * adt_List;


struct adt_ListDesc {
   X2C_INT32 _dummy_;
   adt_Element e;
   adt_List prev;
   adt_List next;
   adt_List curr;
};

extern X2C_INT32 adt_Compare(adt_Element, adt_Element);
typedef X2C_INT32 (*adt_Compare_)(adt_Element, adt_Element);

extern void adt_NewStack(adt_Stack *);

extern void adt_Push(adt_Stack, adt_Element);
typedef void (*adt_Push_)(adt_Stack, adt_Element);

extern void adt_Pop(adt_Stack, adt_Element *);
typedef void (*adt_Pop_)(adt_Stack, adt_Element *);

extern X2C_BOOLEAN adt_IsEmpty(adt_Stack);
typedef X2C_BOOLEAN (*adt_IsEmpty_)(adt_Stack);

extern void adt_NewTree(adt_Tree *);

extern void adt_Find(adt_Tree, adt_Element, adt_Element *);
typedef void (*adt_Find_)(adt_Tree, adt_Element, adt_Element *);

extern void adt_Insert(adt_Tree, adt_Element);
typedef void (*adt_Insert_)(adt_Tree, adt_Element);

extern void adt_SetMin(adt_Tree);
typedef void (*adt_SetMin_)(adt_Tree);

extern void adt_SetMax(adt_Tree);
typedef void (*adt_SetMax_)(adt_Tree);

extern void adt_FindNext(adt_Tree, adt_Element *);
typedef void (*adt_FindNext_)(adt_Tree, adt_Element *);

extern void adt_FindPrev(adt_Tree, adt_Element *);
typedef void (*adt_FindPrev_)(adt_Tree, adt_Element *);

extern void adt_FindFirst(adt_Tree, adt_Element *);
typedef void (*adt_FindFirst_)(adt_Tree, adt_Element *);

extern void adt_FindLast(adt_Tree, adt_Element *);
typedef void (*adt_FindLast_)(adt_Tree, adt_Element *);

extern void adt_Delete(adt_Tree, adt_Element);
typedef void (*adt_Delete_)(adt_Tree, adt_Element);

extern X2C_BOOLEAN adt_IsEmpty0(adt_Tree);
typedef X2C_BOOLEAN (*adt_IsEmpty_0)(adt_Tree);

extern void adt_Backup(adt_Tree, X2C_INT32 *);
typedef void (*adt_Backup_)(adt_Tree, X2C_INT32 *);

extern void adt_Restore(adt_Tree, X2C_INT32);
typedef void (*adt_Restore_)(adt_Tree, X2C_INT32);

extern void adt_NewList(adt_List *);

extern void adt_Clean(adt_List);
typedef void (*adt_Clean_)(adt_List);

extern void adt_Insert0(adt_List, adt_Element);
typedef void (*adt_Insert_0)(adt_List, adt_Element);

extern void adt_InsertAfterCurrent(adt_List, adt_Element);
typedef void (*adt_InsertAfterCurrent_)(adt_List, adt_Element);

extern void adt_InsertBeforeCurrent(adt_List, adt_Element);
typedef void (*adt_InsertBeforeCurrent_)(adt_List, adt_Element);

extern void adt_Find0(adt_List, adt_Element, adt_Element *);
typedef void (*adt_Find_0)(adt_List, adt_Element, adt_Element *);

extern void adt_FindAgain(adt_List, adt_Element *);
typedef void (*adt_FindAgain_)(adt_List, adt_Element *);

extern void adt_Reset(adt_List);
typedef void (*adt_Reset_)(adt_List);

extern void adt_FindNext0(adt_List, adt_Element *);
typedef void (*adt_FindNext_0)(adt_List, adt_Element *);

extern void adt_FindPrev0(adt_List, adt_Element *);
typedef void (*adt_FindPrev_0)(adt_List, adt_Element *);

extern void adt_FindFirst0(adt_List, adt_Element *);
typedef void (*adt_FindFirst_0)(adt_List, adt_Element *);

extern void adt_FindLast0(adt_List, adt_Element *);
typedef void (*adt_FindLast_0)(adt_List, adt_Element *);

extern X2C_BOOLEAN adt_IsEmpty1(adt_List);
typedef X2C_BOOLEAN (*adt_IsEmpty_1)(adt_List);

extern void adt_DeleteCurrent(adt_List);
typedef void (*adt_DeleteCurrent_)(adt_List);

extern void adt_Backup0(adt_List, X2C_INT32 *);
typedef void (*adt_Backup_0)(adt_List, X2C_INT32 *);

extern void adt_Restore0(adt_List, X2C_INT32);
typedef void (*adt_Restore_0)(adt_List, X2C_INT32);

extern void adt_NewNamedElement(adt_NamedElement *, X2C_CHAR [], X2C_CARD32);

extern void adt_SetName(adt_NamedElement, X2C_CHAR [], X2C_CARD32);
typedef void (*adt_SetName_)(adt_NamedElement, X2C_CHAR [], X2C_CARD32);

extern X2C_INT32 adt_Compare0(adt_NamedElement, adt_Element);
typedef X2C_INT32 (*adt_Compare_0)(adt_NamedElement, adt_Element);

extern void adt_Deallocate(adt_Element);


extern void adt_BEGIN(void);


#endif /* adt_H_ */
