/* XDS v2.60: Copyright (c) 1999-2011 Excelsior, LLC. All Rights Reserved. */
/* Generated by XDS Modula-2 to ANSI C v4.20 translator */

#ifndef xrTCov_H_
#define xrTCov_H_
#ifndef X2C_H_
#include "X2C.h"
#endif

#define xrTCov_TCSOUT_ENV_VAR "TCSOUT"

typedef X2C_INT32 xrTCov_TSourceLine;

typedef X2C_INT32 xrTCov_TSourceCol;

typedef X2C_INT32 xrTCov_TIndex;

typedef X2C_INT32 xrTCov_TCounter;

typedef X2C_CARD32 xrTCov_TTime;

enum xrTCov_TestConditionType {xrTCov_cr_File, 
   xrTCov_cr_C1_Procedure, 
   xrTCov_cr_C1_Module, 
   xrTCov_cr_C1_Finally, 
   xrTCov_cr_C1_IF, 
   xrTCov_cr_C1_IF_else, 
   xrTCov_cr_C1_IF_elsif, 
   xrTCov_cr_C1_IF_end, 
   xrTCov_cr_C1_Case, 
   xrTCov_cr_C1_Case_else, 
   xrTCov_cr_C1_Case_end, 
   xrTCov_cr_C1_OberonWith, 
   xrTCov_cr_C1_OberonWith_else, 
   xrTCov_cr_C1_OberonWith_end, 
   xrTCov_cr_C1_While, 
   xrTCov_cr_C1_While_end, 
   xrTCov_cr_C1_Repeat, 
   xrTCov_cr_C1_Repeat_end, 
   xrTCov_cr_C1_For, 
   xrTCov_cr_C1_For_end, 
   xrTCov_cr_C1_Loop, 
   xrTCov_cr_C1_Loop_end, 
   xrTCov_cr_Itr_While, 
   xrTCov_cr_Itr_Repeat, 
   xrTCov_cr_Itr_For, 
   xrTCov_cr_Itr_Loop};


struct xrTCov_TSourceRef;


struct xrTCov_TSourceRef {
   X2C_INT32 line;
   X2C_INT32 col;
   X2C_INT32 end_line;
   X2C_INT32 end_col;
   X2C_CARD8 type;
};

struct xrTCov_TModuleInfo;

typedef struct xrTCov_TModuleInfo * xrTCov_TModuleInfoPtr;


struct xrTCov_TModuleInfo {
   X2C_INT32 count;
   X2C_CARD32 modtime;
   X2C_ADDRESS modname;
   X2C_ADDRESS srcrefs;
   X2C_ADDRESS counters;
   xrTCov_TModuleInfoPtr next;
};

extern void xrTCov_InitIterationLocal(X2C_INT32 *);

extern void xrTCov_IncreaseIterationCounte(X2C_INT32, X2C_INT32 *,
                X2C_INT32 [], X2C_CARD32);

extern void xrTCov_IncreaseCounter(X2C_INT32, X2C_INT32 [], X2C_CARD32);

extern void xrTCov_IncreaseCounterExt(X2C_INT32, X2C_INT32 [], X2C_CARD32,
                X2C_CARD32, xrTCov_TModuleInfoPtr, X2C_CHAR [], X2C_CARD32,
                struct xrTCov_TSourceRef [], X2C_CARD32);

extern void xrTCov_RegistryModule(xrTCov_TModuleInfoPtr, X2C_CARD32,
                X2C_CHAR [], X2C_CARD32, struct xrTCov_TSourceRef [],
                X2C_CARD32, X2C_INT32 [], X2C_CARD32);

extern void X2C_INIT_TESTCOVERAGE(void);

#define xrTCov_MAX_TypeNameLen 18

typedef X2C_CHAR xrTCov_TTestConditionTypeNames[26][18];

extern xrTCov_TTestConditionTypeNames xrTCov_TestConditionNames;

typedef X2C_CHAR * xrTCov_TModuleName;

typedef struct xrTCov_TSourceRef * xrTCov_TSourceRefs;

typedef X2C_INT32 * xrTCov_TCounters;

extern void xrTCov_MakeBackUp(X2C_CHAR [], X2C_CARD32);

extern void xrTCov_ReadTCFile(X2C_CHAR [], X2C_CARD32, xrTCov_TModuleInfoPtr,
                 xrTCov_TModuleInfoPtr *);

extern void xrTCov_WriteTCFile(X2C_CHAR [], X2C_CARD32,
                xrTCov_TModuleInfoPtr, xrTCov_TModuleInfoPtr *);

extern void xrTCov_CancelTCFileOperation(xrTCov_TModuleInfoPtr *);

typedef void ( *xrTCov_FILE_LINE_ITERATOR)(X2C_CHAR [], X2C_CARD32);

extern void xrTCov_EnumFileLines(X2C_CHAR [], X2C_CARD32,
                xrTCov_FILE_LINE_ITERATOR);


extern void xrTCov_BEGIN(void);


#endif /* xrTCov_H_ */
